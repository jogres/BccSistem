-- Tabela de administradores (sem referências a níveis)
CREATE TABLE cad_adm (
  idAdm      INT            PRIMARY KEY AUTO_INCREMENT,
  cnpj       VARCHAR(18)    NOT NULL UNIQUE,
  nome       VARCHAR(150)   NOT NULL
);

-- Tabelas de níveis de comissionamento (ajustadas para referência a cad_adm)
CREATE TABLE master (
  idMaster   INT            PRIMARY KEY,
  primeira   FLOAT          NOT NULL,
  segunda    FLOAT          NOT NULL,
  terceira   FLOAT          NOT NULL,
  quarta     FLOAT          NOT NULL,
  nome       VARCHAR(100)   NOT NULL,
  idAdm      INT            NOT NULL,
  CONSTRAINT fk_master_adm FOREIGN KEY (idAdm) REFERENCES cad_adm(idAdm)
);

CREATE TABLE classic (
  idClassic  INT            PRIMARY KEY,
  primeira   FLOAT          NOT NULL,
  segunda    INT            NOT NULL UNIQUE,
  terceira   FLOAT          NOT NULL,
  quarta     FLOAT          NOT NULL,
  nome       VARCHAR(100)   NOT NULL,
  idAdm      INT            NOT NULL,
  CONSTRAINT fk_classic_adm FOREIGN KEY (idAdm) REFERENCES cad_adm(idAdm)
);

CREATE TABLE basic (
  idBasic    INT            PRIMARY KEY,
  primeira   FLOAT          NOT NULL,
  segunda    FLOAT          NOT NULL,
  terceira   FLOAT          NOT NULL,
  quarta     FLOAT          NOT NULL,
  nome       VARCHAR(100)   NOT NULL,
  idAdm      INT            NOT NULL,
  CONSTRAINT fk_basic_adm   FOREIGN KEY (idAdm) REFERENCES cad_adm(idAdm)
);

-- Tabela de funcionários
CREATE TABLE cad_fun (
  idFun      INT            PRIMARY KEY,
  nome       VARCHAR(100)   NOT NULL,
  endereco   VARCHAR(200)   NOT NULL,
  numero     VARCHAR(20)    NOT NULL,
  dataN      DATE           NOT NULL,
  cpf        VARCHAR(14)    NOT NULL UNIQUE,
  email      VARCHAR(150)   NOT NULL,
  senha      VARCHAR(255)   NOT NULL,
  acesso     VARCHAR(100)   NOT NULL,
  ativo      CHAR(10)       NOT NULL,
  idMaster   INT            ,
  idClassic  INT            ,
  idBasic    INT            ,
  nivel      VARCHAR(50)    NOT NULL,
  CONSTRAINT fk_cadfun_master   FOREIGN KEY (idMaster)  REFERENCES master  (idMaster),
  CONSTRAINT fk_cadfun_classic  FOREIGN KEY (idClassic) REFERENCES classic (idClassic),
  CONSTRAINT fk_cadfun_basic    FOREIGN KEY (idBasic)   REFERENCES basic   (idBasic)
);

-- Tabela de vendas
CREATE TABLE venda (
  idVenda    INT            PRIMARY KEY,
  tipo       VARCHAR(50)    NOT NULL,
  valor      FLOAT          NOT NULL,
  dataV      DATE           NOT NULL,
  idAdm      INT            NOT NULL,
  idFun      INT            NOT NULL,
  CONSTRAINT fk_venda_adm FOREIGN KEY (idAdm) REFERENCES cad_adm (idAdm),
  CONSTRAINT fk_venda_fun FOREIGN KEY (idFun) REFERENCES cad_fun (idFun)
);

-- Tabela de comissões
CREATE TABLE comissao (
  idCom      INT            PRIMARY KEY AUTO_INCREMENT,
  idVenda    INT            NOT NULL,
  totalV     FLOAT          NOT NULL,
  mesC       DATE           NOT NULL,
  idFun      INT            NOT NULL,
  primeira   FLOAT          NOT NULL,
  segunda    FLOAT          NOT NULL,
  terceira   FLOAT          NOT NULL,
  quarta     FLOAT          NOT NULL,
  totalC     FLOAT          NOT NULL,
  CONSTRAINT fk_comissao_venda FOREIGN KEY (idVenda) REFERENCES venda (idVenda),
  CONSTRAINT fk_comissao_fun   FOREIGN KEY (idFun)   REFERENCES cad_fun (idFun)
);

-- Tabela de clientes
CREATE TABLE cad_cli (
  idCli     INT            PRIMARY KEY AUTO_INCREMENT,
  nome      VARCHAR(100)   NOT NULL,
  cpf       VARCHAR(14)    NOT NULL UNIQUE,
  idVenda   INT            ,
  idFun     INT            NOT NULL,
  endereco  VARCHAR(200)   NOT NULL,
  telefone  VARCHAR(20)    NOT NULL,
  tipo      VARCHAR(50)    NOT NULL,
  CONSTRAINT fk_cli_venda FOREIGN KEY (idVenda) REFERENCES venda (idVenda),
  CONSTRAINT fk_cli_fun   FOREIGN KEY (idFun)   REFERENCES cad_fun (idFun)
);